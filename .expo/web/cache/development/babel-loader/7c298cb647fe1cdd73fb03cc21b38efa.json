{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js\";\nimport * as React from 'react';\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport View from \"../../Components/View/View\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\n\nfunction LogBoxInspectorStackFrame(props) {\n  var frame = props.frame,\n      onPress = props.onPress;\n  var column = frame.column != null && parseInt(frame.column, 10);\n  var location = getFileName(frame.file) + (frame.lineNumber != null ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '') : '');\n  return React.createElement(View, {\n    style: styles.frameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n    },\n    onPress: onPress,\n    style: styles.frame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.name, frame.collapse === true && styles.dim],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, frame.methodName), React.createElement(Text, {\n    ellipsizeMode: \"middle\",\n    numberOfLines: 1,\n    style: [styles.location, frame.collapse === true && styles.dim],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, location)));\n}\n\nfunction getFileName(file) {\n  if (file == null) {\n    return '<unknown>';\n  }\n\n  var queryIndex = file.indexOf('?');\n  return file.substring(file.lastIndexOf('/') + 1, queryIndex === -1 ? file.length : queryIndex);\n}\n\nvar styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  lineLocation: {\n    flexDirection: 'row'\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300'\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});\nexport default LogBoxInspectorStackFrame;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js"],"names":["React","StyleSheet","Text","View","Platform","LogBoxButton","LogBoxStyle","LogBoxInspectorStackFrame","props","frame","onPress","column","parseInt","location","getFileName","file","lineNumber","isNaN","styles","frameContainer","default","pressed","getBackgroundColor","name","collapse","dim","methodName","queryIndex","indexOf","substring","lastIndexOf","length","create","flexDirection","paddingHorizontal","flex","paddingVertical","borderRadius","lineLocation","color","getTextColor","fontSize","includeFontPadding","lineHeight","fontWeight","fontFamily","select","android","ios","paddingLeft","line"],"mappings":"AAUA;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,OAAO,KAAKC,WAAZ;;AAUA,SAASC,yBAAT,CAAmCC,KAAnC,EAA6D;AAAA,MACpDC,KADoD,GAClCD,KADkC,CACpDC,KADoD;AAAA,MAC7CC,OAD6C,GAClCF,KADkC,CAC7CE,OAD6C;AAE3D,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAN,IAAgB,IAAhB,IAAwBC,QAAQ,CAACH,KAAK,CAACE,MAAP,EAAe,EAAf,CAA/C;AACA,MAAME,QAAQ,GACZC,WAAW,CAACL,KAAK,CAACM,IAAP,CAAX,IACCN,KAAK,CAACO,UAAN,IAAoB,IAApB,GACG,MACAP,KAAK,CAACO,UADN,IAECL,MAAM,IAAI,CAACM,KAAK,CAACN,MAAD,CAAhB,GAA2B,OAAOA,MAAM,GAAG,CAAhB,CAA3B,GAAgD,EAFjD,CADH,GAIG,EALJ,CADF;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,eAAe,EAAE;AACfC,MAAAA,OAAO,EAAE,aADM;AAEfC,MAAAA,OAAO,EAAEX,OAAO,GAAGJ,WAAW,CAACgB,kBAAZ,CAA+B,CAA/B,CAAH,GAAuC;AAFxC,KADnB;AAKE,IAAA,OAAO,EAAEZ,OALX;AAME,IAAA,KAAK,EAAEQ,MAAM,CAACT,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACS,MAAM,CAACK,IAAR,EAAcd,KAAK,CAACe,QAAN,KAAmB,IAAnB,IAA2BN,MAAM,CAACO,GAAhD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACiB,UADT,CAPF,EAUE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAC,QADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,KAAK,EAAE,CAACR,MAAM,CAACL,QAAR,EAAkBJ,KAAK,CAACe,QAAN,KAAmB,IAAnB,IAA2BN,MAAM,CAACO,GAApD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGZ,QAJH,CAVF,CADF,CADF;AAqBD;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAO,WAAP;AACD;;AACD,MAAMY,UAAU,GAAGZ,IAAI,CAACa,OAAL,CAAa,GAAb,CAAnB;AACA,SAAOb,IAAI,CAACc,SAAL,CACLd,IAAI,CAACe,WAAL,CAAiB,GAAjB,IAAwB,CADnB,EAELH,UAAU,KAAK,CAAC,CAAhB,GAAoBZ,IAAI,CAACgB,MAAzB,GAAkCJ,UAF7B,CAAP;AAID;;AAED,IAAMT,MAAM,GAAGjB,UAAU,CAAC+B,MAAX,CAAkB;AAC/Bb,EAAAA,cAAc,EAAE;AACdc,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,iBAAiB,EAAE;AAFL,GADe;AAK/BzB,EAAAA,KAAK,EAAE;AACL0B,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,eAAe,EAAE,CAFZ;AAGLF,IAAAA,iBAAiB,EAAE,EAHd;AAILG,IAAAA,YAAY,EAAE;AAJT,GALwB;AAW/BC,EAAAA,YAAY,EAAE;AACZL,IAAAA,aAAa,EAAE;AADH,GAXiB;AAc/BV,EAAAA,IAAI,EAAE;AACJgB,IAAAA,KAAK,EAAEjC,WAAW,CAACkC,YAAZ,CAAyB,CAAzB,CADH;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,kBAAkB,EAAE,KAHhB;AAIJC,IAAAA,UAAU,EAAE,EAJR;AAKJC,IAAAA,UAAU,EAAE,KALR;AAMJC,IAAAA,UAAU,EAAEzC,QAAQ,CAAC0C,MAAT,CAAgB;AAACC,MAAAA,OAAO,EAAE,WAAV;AAAuBC,MAAAA,GAAG,EAAE;AAA5B,KAAhB;AANR,GAdyB;AAsB/BnC,EAAAA,QAAQ,EAAE;AACR0B,IAAAA,KAAK,EAAEjC,WAAW,CAACkC,YAAZ,CAAyB,GAAzB,CADC;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRG,IAAAA,UAAU,EAAE,KAHJ;AAIRF,IAAAA,kBAAkB,EAAE,KAJZ;AAKRC,IAAAA,UAAU,EAAE,EALJ;AAMRM,IAAAA,WAAW,EAAE;AANL,GAtBqB;AA8B/BxB,EAAAA,GAAG,EAAE;AACHc,IAAAA,KAAK,EAAEjC,WAAW,CAACkC,YAAZ,CAAyB,GAAzB,CADJ;AAEHI,IAAAA,UAAU,EAAE;AAFT,GA9B0B;AAkC/BM,EAAAA,IAAI,EAAE;AACJX,IAAAA,KAAK,EAAEjC,WAAW,CAACkC,YAAZ,CAAyB,GAAzB,CADH;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJG,IAAAA,UAAU,EAAE,KAHR;AAIJF,IAAAA,kBAAkB,EAAE,KAJhB;AAKJC,IAAAA,UAAU,EAAE;AALR;AAlCyB,CAAlB,CAAf;AA2CA,eAAepC,yBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport View from '../../Components/View/View';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\n\ntype Props = $ReadOnly<{|\n  frame: StackFrame,\n  onPress?: ?(event: PressEvent) => void,\n|}>;\n\nfunction LogBoxInspectorStackFrame(props: Props): React.Node {\n  const {frame, onPress} = props;\n  const column = frame.column != null && parseInt(frame.column, 10);\n  const location =\n    getFileName(frame.file) +\n    (frame.lineNumber != null\n      ? ':' +\n        frame.lineNumber +\n        (column && !isNaN(column) ? ':' + (column + 1) : '')\n      : '');\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent',\n        }}\n        onPress={onPress}\n        style={styles.frame}>\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>\n          {frame.methodName}\n        </Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}>\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction getFileName(file) {\n  if (file == null) {\n    return '<unknown>';\n  }\n  const queryIndex = file.indexOf('?');\n  return file.substring(\n    file.lastIndexOf('/') + 1,\n    queryIndex === -1 ? file.length : queryIndex,\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: 'row',\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300',\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nexport default LogBoxInspectorStackFrame;\n"]},"metadata":{},"sourceType":"module"}