{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Keyboard = require(\"./Keyboard\");\n\nvar LayoutAnimation = require(\"../../LayoutAnimation/LayoutAnimation\");\n\nvar Platform = require(\"../../Utilities/Platform\");\n\nvar React = require('react');\n\nvar StyleSheet = require(\"../../StyleSheet/StyleSheet\");\n\nvar View = require(\"../View/View\");\n\nvar KeyboardAvoidingView = function (_React$Component) {\n  _inherits(KeyboardAvoidingView, _React$Component);\n\n  var _super = _createSuper(KeyboardAvoidingView);\n\n  function KeyboardAvoidingView(props) {\n    var _this;\n\n    _classCallCheck(this, KeyboardAvoidingView);\n\n    _this = _super.call(this, props);\n    _this._frame = null;\n    _this._subscriptions = [];\n    _this._initialFrameHeight = 0;\n\n    _this._onKeyboardChange = function (event) {\n      if (event == null) {\n        _this.setState({\n          bottom: 0\n        });\n\n        return;\n      }\n\n      var duration = event.duration,\n          easing = event.easing,\n          endCoordinates = event.endCoordinates;\n\n      var height = _this._relativeKeyboardHeight(endCoordinates);\n\n      if (_this.state.bottom === height) {\n        return;\n      }\n\n      if (duration && easing) {\n        LayoutAnimation.configureNext({\n          duration: duration > 10 ? duration : 10,\n          update: {\n            duration: duration > 10 ? duration : 10,\n            type: LayoutAnimation.Types[easing] || 'keyboard'\n          }\n        });\n      }\n\n      _this.setState({\n        bottom: height\n      });\n    };\n\n    _this._onLayout = function (event) {\n      _this._frame = event.nativeEvent.layout;\n\n      if (!_this._initialFrameHeight) {\n        _this._initialFrameHeight = _this._frame.height;\n      }\n    };\n\n    _this.state = {\n      bottom: 0\n    };\n    _this.viewRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(KeyboardAvoidingView, [{\n    key: \"_relativeKeyboardHeight\",\n    value: function _relativeKeyboardHeight(keyboardFrame) {\n      var frame = this._frame;\n\n      if (!frame || !keyboardFrame) {\n        return 0;\n      }\n\n      var keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;\n      return Math.max(frame.y + frame.height - keyboardY, 0);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'ios') {\n        this._subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this._onKeyboardChange)];\n      } else {\n        this._subscriptions = [Keyboard.addListener('keyboardDidHide', this._onKeyboardChange), Keyboard.addListener('keyboardDidShow', this._onKeyboardChange)];\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._subscriptions.forEach(function (subscription) {\n        subscription.remove();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          behavior = _this$props.behavior,\n          children = _this$props.children,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          enabled = _this$props.enabled,\n          keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, [\"behavior\", \"children\", \"contentContainerStyle\", \"enabled\", \"keyboardVerticalOffset\", \"style\"]);\n\n      var bottomHeight = enabled ? this.state.bottom : 0;\n\n      switch (behavior) {\n        case 'height':\n          var heightStyle;\n\n          if (this._frame != null && this.state.bottom > 0) {\n            heightStyle = {\n              height: this._initialFrameHeight - bottomHeight,\n              flex: 0\n            };\n          }\n\n          return React.createElement(View, _extends({\n            ref: this.viewRef,\n            style: StyleSheet.compose(style, heightStyle),\n            onLayout: this._onLayout\n          }, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }\n          }), children);\n\n        case 'position':\n          return React.createElement(View, _extends({\n            ref: this.viewRef,\n            style: style,\n            onLayout: this._onLayout\n          }, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 11\n            }\n          }), React.createElement(View, {\n            style: StyleSheet.compose(contentContainerStyle, {\n              bottom: bottomHeight\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }\n          }, children));\n\n        case 'padding':\n          return React.createElement(View, _extends({\n            ref: this.viewRef,\n            style: StyleSheet.compose(style, {\n              paddingBottom: bottomHeight\n            }),\n            onLayout: this._onLayout\n          }, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 11\n            }\n          }), children);\n\n        default:\n          return React.createElement(View, _extends({\n            ref: this.viewRef,\n            onLayout: this._onLayout,\n            style: style\n          }, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 11\n            }\n          }), children);\n      }\n    }\n  }]);\n\n  return KeyboardAvoidingView;\n}(React.Component);\n\nKeyboardAvoidingView.defaultProps = {\n  enabled: true,\n  keyboardVerticalOffset: 0\n};\nmodule.exports = KeyboardAvoidingView;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js"],"names":["Keyboard","require","LayoutAnimation","Platform","React","StyleSheet","View","KeyboardAvoidingView","props","_frame","_subscriptions","_initialFrameHeight","_onKeyboardChange","event","setState","bottom","duration","easing","endCoordinates","height","_relativeKeyboardHeight","state","configureNext","update","type","Types","_onLayout","nativeEvent","layout","viewRef","createRef","keyboardFrame","frame","keyboardY","screenY","keyboardVerticalOffset","Math","max","y","OS","addListener","forEach","subscription","remove","behavior","children","contentContainerStyle","enabled","style","bottomHeight","heightStyle","flex","compose","paddingBottom","Component","defaultProps","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Keyboard = require('./Keyboard');\nconst LayoutAnimation = require('../../LayoutAnimation/LayoutAnimation');\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst View = require('../View/View');\n\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport type EmitterSubscription from '../../vendor/emitter/EmitterSubscription';\nimport type {\n  ViewProps,\n  ViewLayout,\n  ViewLayoutEvent,\n} from '../View/ViewPropTypes';\nimport type {KeyboardEvent} from './Keyboard';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Specify how to react to the presence of the keyboard.\n   */\n  behavior?: ?('height' | 'position' | 'padding'),\n\n  /**\n   * Style of the content container when `behavior` is 'position'.\n   */\n  contentContainerStyle?: ?ViewStyleProp,\n\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled: ?boolean,\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset: number,\n|}>;\n\ntype State = {|\n  bottom: number,\n|};\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n */\nclass KeyboardAvoidingView extends React.Component<Props, State> {\n  static defaultProps: {|enabled: boolean, keyboardVerticalOffset: number|} = {\n    enabled: true,\n    keyboardVerticalOffset: 0,\n  };\n\n  _frame: ?ViewLayout = null;\n  _subscriptions: Array<EmitterSubscription> = [];\n  viewRef: {current: React.ElementRef<any> | null, ...};\n  _initialFrameHeight: number = 0;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {bottom: 0};\n    this.viewRef = React.createRef();\n  }\n\n  _relativeKeyboardHeight(keyboardFrame): number {\n    const frame = this._frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    const keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;\n\n    // Calculate the displacement needed for the view such that it\n    // no longer overlaps with the keyboard\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  _onKeyboardChange = (event: ?KeyboardEvent) => {\n    if (event == null) {\n      this.setState({bottom: 0});\n      return;\n    }\n\n    const {duration, easing, endCoordinates} = event;\n    const height = this._relativeKeyboardHeight(endCoordinates);\n\n    if (this.state.bottom === height) {\n      return;\n    }\n\n    if (duration && easing) {\n      LayoutAnimation.configureNext({\n        // We have to pass the duration equal to minimal accepted duration defined here: RCTLayoutAnimation.m\n        duration: duration > 10 ? duration : 10,\n        update: {\n          duration: duration > 10 ? duration : 10,\n          type: LayoutAnimation.Types[easing] || 'keyboard',\n        },\n      });\n    }\n    this.setState({bottom: height});\n  };\n\n  _onLayout = (event: ViewLayoutEvent) => {\n    this._frame = event.nativeEvent.layout;\n    if (!this._initialFrameHeight) {\n      // save the initial frame height, before the keyboard is visible\n      this._initialFrameHeight = this._frame.height;\n    }\n  };\n\n  componentDidMount(): void {\n    if (Platform.OS === 'ios') {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this._onKeyboardChange),\n      ];\n    } else {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardDidHide', this._onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', this._onKeyboardChange),\n      ];\n    }\n  }\n\n  componentWillUnmount(): void {\n    this._subscriptions.forEach(subscription => {\n      subscription.remove();\n    });\n  }\n\n  render(): React.Node {\n    const {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled,\n      keyboardVerticalOffset,\n      style,\n      ...props\n    } = this.props;\n    const bottomHeight = enabled ? this.state.bottom : 0;\n    switch (behavior) {\n      case 'height':\n        let heightStyle;\n        if (this._frame != null && this.state.bottom > 0) {\n          // Note that we only apply a height change when there is keyboard present,\n          // i.e. this.state.bottom is greater than 0. If we remove that condition,\n          // this.frame.height will never go back to its original value.\n          // When height changes, we need to disable flex.\n          heightStyle = {\n            height: this._initialFrameHeight - bottomHeight,\n            flex: 0,\n          };\n        }\n        return (\n          <View\n            ref={this.viewRef}\n            style={StyleSheet.compose(\n              style,\n              heightStyle,\n            )}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      case 'position':\n        return (\n          <View\n            ref={this.viewRef}\n            style={style}\n            onLayout={this._onLayout}\n            {...props}>\n            <View\n              style={StyleSheet.compose(\n                contentContainerStyle,\n                {\n                  bottom: bottomHeight,\n                },\n              )}>\n              {children}\n            </View>\n          </View>\n        );\n\n      case 'padding':\n        return (\n          <View\n            ref={this.viewRef}\n            style={StyleSheet.compose(\n              style,\n              {paddingBottom: bottomHeight},\n            )}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      default:\n        return (\n          <View\n            ref={this.viewRef}\n            onLayout={this._onLayout}\n            style={style}\n            {...props}>\n            {children}\n          </View>\n        );\n    }\n  }\n}\n\nmodule.exports = KeyboardAvoidingView;\n"]},"metadata":{},"sourceType":"script"}