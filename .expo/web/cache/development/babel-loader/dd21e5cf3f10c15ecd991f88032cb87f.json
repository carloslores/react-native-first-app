{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorHeader.js\";\nimport Image from \"../../Image/Image\";\nimport Platform from \"../../Utilities/Platform\";\nimport * as React from 'react';\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport View from \"../../Components/View/View\";\nimport StatusBar from \"../../Components/StatusBar/StatusBar\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\n\nfunction LogBoxInspectorHeader(props) {\n  if (props.level === 'syntax') {\n    return React.createElement(View, {\n      style: [styles.safeArea, styles[props.level]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.titleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Failed to compile\"))));\n  }\n\n  var prevIndex = props.selectedIndex - 1 < 0 ? props.total - 1 : props.selectedIndex - 1;\n  var nextIndex = props.selectedIndex + 1 > props.total - 1 ? 0 : props.selectedIndex + 1;\n  var titleText = \"Log \" + (props.selectedIndex + 1) + \" of \" + props.total;\n  return React.createElement(View, {\n    style: [styles.safeArea, styles[props.level]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(LogBoxInspectorHeaderButton, {\n    disabled: props.total <= 1,\n    level: props.level,\n    image: require(\"./LogBoxImages/chevron-left.png\"),\n    onPress: function onPress() {\n      return props.onSelectIndex(prevIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, titleText)), React.createElement(LogBoxInspectorHeaderButton, {\n    disabled: props.total <= 1,\n    level: props.level,\n    image: require(\"./LogBoxImages/chevron-right.png\"),\n    onPress: function onPress() {\n      return props.onSelectIndex(nextIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar backgroundForLevel = function backgroundForLevel(level) {\n  return {\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor()\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor()\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    }\n  }[level];\n};\n\nfunction LogBoxInspectorHeaderButton(props) {\n  return React.createElement(LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? null : props.onPress,\n    style: headerStyles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, props.disabled ? null : React.createElement(Image, {\n    source: props.image,\n    style: headerStyles.buttonImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor()\n  }\n});\nvar styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: 'row',\n    height: Platform.select({\n      android: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 40\n  }\n});\nexport default LogBoxInspectorHeader;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorHeader.js"],"names":["Image","Platform","React","StyleSheet","Text","View","StatusBar","LogBoxButton","LogBoxStyle","LogBoxInspectorHeader","props","level","styles","safeArea","header","title","titleText","prevIndex","selectedIndex","total","nextIndex","require","onSelectIndex","backgroundForLevel","warn","default","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","LogBoxInspectorHeaderButton","disabled","onPress","headerStyles","button","image","buttonImage","create","alignItems","aspectRatio","justifyContent","marginTop","marginRight","marginLeft","marginBottom","borderRadius","height","width","tintColor","getTextColor","backgroundColor","getFatalColor","getWarningColor","getErrorColor","flexDirection","select","android","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","OS","currentHeight"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Image from '../../Image/Image';\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport View from '../../Components/View/View';\nimport StatusBar from '../../Components/StatusBar/StatusBar';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport type {LogLevel} from '../Data/LogBoxLog';\ntype Props = $ReadOnly<{|\n  onSelectIndex: (selectedIndex: number) => void,\n  selectedIndex: number,\n  total: number,\n  level: LogLevel,\n|}>;\n\nfunction LogBoxInspectorHeader(props: Props): React.Node {\n  if (props.level === 'syntax') {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex =\n    props.selectedIndex - 1 < 0 ? props.total - 1 : props.selectedIndex - 1;\n  const nextIndex =\n    props.selectedIndex + 1 > props.total - 1 ? 0 : props.selectedIndex + 1;\n\n  const titleText = `Log ${props.selectedIndex + 1} of ${props.total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={props.total <= 1}\n          level={props.level}\n          image={require('./LogBoxImages/chevron-left.png')}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={props.total <= 1}\n          level={props.level}\n          image={require('./LogBoxImages/chevron-right.png')}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  }[level]);\n\nfunction LogBoxInspectorHeaderButton(\n  props: $ReadOnly<{|\n    disabled: boolean,\n    image: number,\n    level: LogLevel,\n    onPress?: ?() => void,\n  |}>,\n): React.Node {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? null : props.onPress}\n      style={headerStyles.button}>\n      {props.disabled ? null : (\n        <Image source={props.image} style={headerStyles.buttonImage} />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor(),\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: 'row',\n    height: Platform.select({\n      android: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 40,\n  },\n});\n\nexport default LogBoxInspectorHeader;\n"]},"metadata":{},"sourceType":"module"}