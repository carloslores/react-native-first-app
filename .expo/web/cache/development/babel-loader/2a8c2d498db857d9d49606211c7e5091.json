{"ast":null,"code":"'use strict';\n\nimport * as React from 'react';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeValue']\n});\nexport default codegenNativeComponent('AndroidSwitch', {\n  interfaceOnly: true\n});","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/Switch/AndroidSwitchNativeComponent.js"],"names":["React","codegenNativeCommands","codegenNativeComponent","Commands","supportedCommands","interfaceOnly"],"mappings":"AAUA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,OAAOC,qBAAP,MAAkC,wDAAlC;AACA,OAAOC,sBAAP,MAAmC,yDAAnC;AAqCA,OAAO,IAAMC,QAAwB,GAAGF,qBAAqB,CAAiB;AAC5EG,EAAAA,iBAAiB,EAAE,CAAC,gBAAD;AADyD,CAAjB,CAAtD;AAIP,eAAgBF,sBAAsB,CAAc,eAAd,EAA+B;AACnEG,EAAAA,aAAa,EAAE;AADoD,CAA/B,CAAtC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\n\nimport type {\n  WithDefault,\n  BubblingEventHandler,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type {HostComponent} from 'react-native/Libraries/Renderer/shims/ReactNativeTypes';\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheetTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\ntype SwitchChangeEvent = $ReadOnly<{|\n  value: boolean,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  disabled?: WithDefault<boolean, false>,\n  enabled?: WithDefault<boolean, true>,\n  thumbColor?: ?ColorValue,\n  trackColorForFalse?: ?ColorValue,\n  trackColorForTrue?: ?ColorValue,\n  value?: WithDefault<boolean, false>,\n  on?: WithDefault<boolean, false>,\n  thumbTintColor?: ?ColorValue,\n  trackTintColor?: ?ColorValue,\n\n  // Events\n  onChange?: BubblingEventHandler<SwitchChangeEvent>,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeValue: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeValue'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('AndroidSwitch', {\n  interfaceOnly: true,\n}): NativeType);\n"]},"metadata":{},"sourceType":"module"}