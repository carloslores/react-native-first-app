{"ast":null,"code":"'use strict';\n\nvar _listeners = [];\nvar _activeScene = {\n  name: 'default'\n};\nvar SceneTracker = {\n  setActiveScene: function setActiveScene(scene) {\n    _activeScene = scene;\n\n    _listeners.forEach(function (listener) {\n      return listener(_activeScene);\n    });\n  },\n  getActiveScene: function getActiveScene() {\n    return _activeScene;\n  },\n  addActiveSceneChangedListener: function addActiveSceneChangedListener(callback) {\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  }\n};\nmodule.exports = SceneTracker;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Utilities/SceneTracker.js"],"names":["_listeners","_activeScene","name","SceneTracker","setActiveScene","scene","forEach","listener","getActiveScene","addActiveSceneChangedListener","callback","push","remove","filter","module","exports"],"mappings":"AAUA;;AAIA,IAAIA,UAAyC,GAAG,EAAhD;AAEA,IAAIC,YAAY,GAAG;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAnB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cADmB,0BACJC,KADI,EACU;AAC3BJ,IAAAA,YAAY,GAAGI,KAAf;;AACAL,IAAAA,UAAU,CAACM,OAAX,CAAmB,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACN,YAAD,CAAZ;AAAA,KAA3B;AACD,GAJkB;AAMnBO,EAAAA,cANmB,4BAMK;AACtB,WAAOP,YAAP;AACD,GARkB;AAUnBQ,EAAAA,6BAVmB,yCAWjBC,QAXiB,EAYU;AAC3BV,IAAAA,UAAU,CAACW,IAAX,CAAgBD,QAAhB;;AACA,WAAO;AACLE,MAAAA,MAAM,EAAE,kBAAM;AACZZ,QAAAA,UAAU,GAAGA,UAAU,CAACa,MAAX,CAAkB,UAAAN,QAAQ;AAAA,iBAAIG,QAAQ,KAAKH,QAAjB;AAAA,SAA1B,CAAb;AACD;AAHI,KAAP;AAKD;AAnBkB,CAArB;AAsBAO,MAAM,CAACC,OAAP,GAAiBZ,YAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nexport type Scene = {name: string, ...};\n\nlet _listeners: Array<(scene: Scene) => void> = [];\n\nlet _activeScene = {name: 'default'};\n\nconst SceneTracker = {\n  setActiveScene(scene: Scene) {\n    _activeScene = scene;\n    _listeners.forEach(listener => listener(_activeScene));\n  },\n\n  getActiveScene(): Scene {\n    return _activeScene;\n  },\n\n  addActiveSceneChangedListener(\n    callback: (scene: Scene) => void,\n  ): {remove: () => void, ...} {\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  },\n};\n\nmodule.exports = SceneTracker;\n"]},"metadata":{},"sourceType":"script"}