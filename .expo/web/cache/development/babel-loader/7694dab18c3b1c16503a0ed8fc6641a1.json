{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar Platform = require(\"../Utilities/Platform\");\n\nvar invariant = require('invariant');\n\nvar processColor = require(\"../StyleSheet/processColor\");\n\nimport NativeActionSheetManager from \"../ActionSheetIOS/NativeActionSheetManager\";\nimport NativeShareModule from \"./NativeShareModule\";\n\nvar Share = function () {\n  function Share() {\n    _classCallCheck(this, Share);\n  }\n\n  _createClass(Share, null, [{\n    key: \"share\",\n    value: function share(content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');\n      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');\n      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');\n\n      if (Platform.OS === 'android') {\n        invariant(NativeShareModule, 'ShareModule should be registered on Android.');\n        invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');\n        var newContent = {\n          title: content.title,\n          message: typeof content.message === 'string' ? content.message : undefined\n        };\n        return NativeShareModule.share(newContent, options.dialogTitle);\n      } else if (Platform.OS === 'ios') {\n        return new Promise(function (resolve, reject) {\n          var tintColor = processColor(options.tintColor);\n          invariant(tintColor == null || typeof tintColor === 'number', 'Unexpected color given for options.tintColor');\n          invariant(NativeActionSheetManager, 'NativeActionSheetManager is not registered on iOS, but it should be.');\n          NativeActionSheetManager.showShareActionSheetWithOptions({\n            message: typeof content.message === 'string' ? content.message : undefined,\n            url: typeof content.url === 'string' ? content.url : undefined,\n            subject: options.subject,\n            tintColor: typeof tintColor === 'number' ? tintColor : undefined,\n            excludedActivityTypes: options.excludedActivityTypes\n          }, function (error) {\n            return reject(error);\n          }, function (success, activityType) {\n            if (success) {\n              resolve({\n                action: 'sharedAction',\n                activityType: activityType\n              });\n            } else {\n              resolve({\n                action: 'dismissedAction'\n              });\n            }\n          });\n        });\n      } else {\n        return Promise.reject(new Error('Unsupported platform'));\n      }\n    }\n  }]);\n\n  return Share;\n}();\n\nShare.sharedAction = 'sharedAction';\nShare.dismissedAction = 'dismissedAction';\nmodule.exports = Share;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Share/Share.js"],"names":["Platform","require","invariant","processColor","NativeActionSheetManager","NativeShareModule","Share","content","options","url","message","OS","title","newContent","undefined","share","dialogTitle","Promise","resolve","reject","tintColor","showShareActionSheetWithOptions","subject","excludedActivityTypes","error","success","activityType","action","Error","sharedAction","dismissedAction","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Platform = require('../Utilities/Platform');\n\nconst invariant = require('invariant');\nconst processColor = require('../StyleSheet/processColor');\n\nimport NativeActionSheetManager from '../ActionSheetIOS/NativeActionSheetManager';\nimport NativeShareModule from './NativeShareModule';\n\ntype Content =\n  | {\n      title?: string,\n      message: string,\n      ...\n    }\n  | {\n      title?: string,\n      url: string,\n      ...\n    };\ntype Options = {\n  dialogTitle?: string,\n  excludedActivityTypes?: Array<string>,\n  tintColor?: string,\n  subject?: string,\n  ...\n};\n\nclass Share {\n  /**\n   * Open a dialog to share text content.\n   *\n   * In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`.\n   * If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`\n   * and all the other keys being undefined.\n   *\n   * In Android, Returns a Promise which always be resolved with action being `Share.sharedAction`.\n   *\n   * ### Content\n   *\n   *  - `message` - a message to share\n   *\n   * #### iOS\n   *\n   *  - `url` - an URL to share\n   *\n   * At least one of URL and message is required.\n   *\n   * #### Android\n   *\n   * - `title` - title of the message\n   *\n   * ### Options\n   *\n   * #### iOS\n   *\n   *  - `subject` - a subject to share via email\n   *  - `excludedActivityTypes`\n   *  - `tintColor`\n   *\n   * #### Android\n   *\n   *  - `dialogTitle`\n   *\n   */\n  static share(content: Content, options: Options = {}): Promise<Object> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object',\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL and message is required',\n    );\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n\n    if (Platform.OS === 'android') {\n      invariant(\n        NativeShareModule,\n        'ShareModule should be registered on Android.',\n      );\n      invariant(\n        !content.title || typeof content.title === 'string',\n        'Invalid title: title should be a string.',\n      );\n\n      const newContent = {\n        title: content.title,\n        message:\n          typeof content.message === 'string' ? content.message : undefined,\n      };\n\n      return NativeShareModule.share(newContent, options.dialogTitle);\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        const tintColor = processColor(options.tintColor);\n\n        invariant(\n          tintColor == null || typeof tintColor === 'number',\n          'Unexpected color given for options.tintColor',\n        );\n\n        invariant(\n          NativeActionSheetManager,\n          'NativeActionSheetManager is not registered on iOS, but it should be.',\n        );\n\n        NativeActionSheetManager.showShareActionSheetWithOptions(\n          {\n            message:\n              typeof content.message === 'string' ? content.message : undefined,\n            url: typeof content.url === 'string' ? content.url : undefined,\n            subject: options.subject,\n            tintColor: typeof tintColor === 'number' ? tintColor : undefined,\n            excludedActivityTypes: options.excludedActivityTypes,\n          },\n          error => reject(error),\n          (success, activityType) => {\n            if (success) {\n              resolve({\n                action: 'sharedAction',\n                activityType: activityType,\n              });\n            } else {\n              resolve({\n                action: 'dismissedAction',\n              });\n            }\n          },\n        );\n      });\n    } else {\n      return Promise.reject(new Error('Unsupported platform'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static sharedAction: 'sharedAction' = 'sharedAction';\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static dismissedAction: 'dismissedAction' = 'dismissedAction';\n}\n\nmodule.exports = Share;\n"]},"metadata":{},"sourceType":"module"}