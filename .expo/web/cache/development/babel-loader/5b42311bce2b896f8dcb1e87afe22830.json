{"ast":null,"code":"var _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.js\";\n\nvar Platform = require(\"../../Utilities/Platform\");\n\nvar React = require('react');\n\nvar View = require(\"../View/View\");\n\nvar exported;\n\nif (Platform.OS === 'android') {\n  exported = React.forwardRef(function SafeAreaView(props, forwardedRef) {\n    var emulateUnlessSupported = props.emulateUnlessSupported,\n        localProps = _objectWithoutProperties(props, [\"emulateUnlessSupported\"]);\n\n    return React.createElement(View, _extends({}, localProps, {\n      ref: forwardedRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }\n    }));\n  });\n} else {\n  var RCTSafeAreaViewNativeComponent = require(\"./RCTSafeAreaViewNativeComponent\").default;\n\n  exported = React.forwardRef(function SafeAreaView(props, forwardedRef) {\n    return React.createElement(RCTSafeAreaViewNativeComponent, _extends({\n      emulateUnlessSupported: true\n    }, props, {\n      ref: forwardedRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  });\n}\n\nmodule.exports = exported;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.js"],"names":["Platform","require","React","View","exported","OS","forwardRef","SafeAreaView","props","forwardedRef","emulateUnlessSupported","localProps","RCTSafeAreaViewNativeComponent","default","module","exports"],"mappings":";;;;;;AAUA,IAAMA,QAAQ,GAAGC,OAAO,4BAAxB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,IAAI,GAAGF,OAAO,gBAApB;;AAUA,IAAIG,QAAJ;;AAcA,IAAIJ,QAAQ,CAACK,EAAT,KAAgB,SAApB,EAA+B;AAC7BD,EAAAA,QAAQ,GAAGF,KAAK,CAACI,UAAN,CACT,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;AAAA,QAClCC,sBADkC,GACOF,KADP,CAClCE,sBADkC;AAAA,QACPC,UADO,4BACOH,KADP;;AAEzC,WAAO,oBAAC,IAAD,eAAUG,UAAV;AAAsB,MAAA,GAAG,EAAEF,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAJQ,CAAX;AAMD,CAPD,MAOO;AACL,MAAMG,8BAA8B,GAAGX,OAAO,oCAAP,CACpCY,OADH;;AAGAT,EAAAA,QAAQ,GAAGF,KAAK,CAACI,UAAN,CACT,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;AACzC,WACE,oBAAC,8BAAD;AACE,MAAA,sBAAsB,EAAE;AAD1B,OAEMD,KAFN;AAGE,MAAA,GAAG,EAAEC,YAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD,GATQ,CAAX;AAWD;;AAEDK,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\nconst View = require('../View/View');\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  emulateUnlessSupported?: boolean,\n|}>;\n\nlet exported: React.AbstractComponent<\n  Props,\n  React.ElementRef<HostComponent<mixed>>,\n>;\n\n/**\n * Renders nested content and automatically applies paddings reflect the portion\n * of the view that is not covered by navigation bars, tab bars, toolbars, and\n * other ancestor views.\n *\n * Moreover, and most importantly, Safe Area's paddings reflect physical\n * limitation of the screen, such as rounded corners or camera notches (aka\n * sensor housing area on iPhone X).\n */\nif (Platform.OS === 'android') {\n  exported = React.forwardRef<Props, React.ElementRef<HostComponent<mixed>>>(\n    function SafeAreaView(props, forwardedRef) {\n      const {emulateUnlessSupported, ...localProps} = props;\n      return <View {...localProps} ref={forwardedRef} />;\n    },\n  );\n} else {\n  const RCTSafeAreaViewNativeComponent = require('./RCTSafeAreaViewNativeComponent')\n    .default;\n\n  exported = React.forwardRef<Props, React.ElementRef<HostComponent<mixed>>>(\n    function SafeAreaView(props, forwardedRef) {\n      return (\n        <RCTSafeAreaViewNativeComponent\n          emulateUnlessSupported={true}\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    },\n  );\n}\n\nmodule.exports = exported;\n"]},"metadata":{},"sourceType":"script"}