{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Platform from \"../../Utilities/Platform\";\n\nvar View = require(\"../../Components/View/View\");\n\nvar React = require('react');\n\nvar AnimatedMock = require(\"./AnimatedMock\");\n\nvar AnimatedImplementation = require(\"./AnimatedImplementation\");\n\nvar Animated = Platform.isTesting || global.RN$Bridgeless ? AnimatedMock : AnimatedImplementation;\nmodule.exports = _objectSpread({\n  get FlatList() {\n    return require(\"./components/AnimatedFlatList\");\n  },\n\n  get Image() {\n    return require(\"./components/AnimatedImage\");\n  },\n\n  get ScrollView() {\n    return require(\"./components/AnimatedScrollView\");\n  },\n\n  get SectionList() {\n    return require(\"./components/AnimatedSectionList\");\n  },\n\n  get Text() {\n    return require(\"./components/AnimatedText\");\n  },\n\n  get View() {\n    return require(\"./components/AnimatedView\");\n  }\n\n}, Animated);","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Animated/src/Animated.js"],"names":["Platform","View","require","React","AnimatedMock","AnimatedImplementation","Animated","isTesting","global","RN$Bridgeless","module","exports","FlatList","Image","ScrollView","SectionList","Text"],"mappings":"AAUA;;;;;;;;AAEA,OAAOA,QAAP;;AACA,IAAMC,IAAI,GAAGC,OAAO,8BAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAGA,IAAME,YAAY,GAAGF,OAAO,kBAA5B;;AACA,IAAMG,sBAAsB,GAAGH,OAAO,4BAAtC;;AAGA,IAAMI,QAAQ,GAAKN,QAAQ,CAACO,SAAT,IAAsBC,MAAM,CAACC,aAA7B,GACfL,YADe,GAEfC,sBAFJ;AAIAK,MAAM,CAACC,OAAP;AACE,MAAIC,QAAJ,GAAoB;AAClB,WAAOV,OAAO,iCAAd;AACD,GAHH;;AAIE,MAAIW,KAAJ,GAAiB;AACf,WAAOX,OAAO,8BAAd;AACD,GANH;;AAOE,MAAIY,UAAJ,GAAsB;AACpB,WAAOZ,OAAO,mCAAd;AACD,GATH;;AAUE,MAAIa,WAAJ,GAAuB;AACrB,WAAOb,OAAO,oCAAd;AACD,GAZH;;AAaE,MAAIc,IAAJ,GAAgB;AACd,WAAOd,OAAO,6BAAd;AACD,GAfH;;AAgBE,MAAID,IAAJ,GAGE;AACA,WAAOC,OAAO,6BAAd;AACD;;AArBH,GAsBKI,QAtBL","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport Platform from '../../Utilities/Platform';\nconst View = require('../../Components/View/View');\nconst React = require('react');\nimport type {AnimatedComponentType} from './createAnimatedComponent';\n\nconst AnimatedMock = require('./AnimatedMock');\nconst AnimatedImplementation = require('./AnimatedImplementation');\n\n//TODO(T57411659): Remove the bridgeless check when Animated perf regressions are fixed.\nconst Animated = ((Platform.isTesting || global.RN$Bridgeless\n  ? AnimatedMock\n  : AnimatedImplementation): typeof AnimatedMock);\n\nmodule.exports = {\n  get FlatList(): any {\n    return require('./components/AnimatedFlatList');\n  },\n  get Image(): any {\n    return require('./components/AnimatedImage');\n  },\n  get ScrollView(): any {\n    return require('./components/AnimatedScrollView');\n  },\n  get SectionList(): any {\n    return require('./components/AnimatedSectionList');\n  },\n  get Text(): any {\n    return require('./components/AnimatedText');\n  },\n  get View(): AnimatedComponentType<\n    React.ElementConfig<typeof View>,\n    React.ElementRef<typeof View>,\n  > {\n    return require('./components/AnimatedView');\n  },\n  ...Animated,\n};\n"]},"metadata":{},"sourceType":"module"}