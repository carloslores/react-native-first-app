{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js\",\n    _this4 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Pressability from \"../../Pressability/Pressability\";\nimport { PressabilityDebugView } from \"../../Pressability/PressabilityDebug\";\nimport TVTouchable from \"./TVTouchable\";\nimport Animated from 'react-native/Libraries/Animated/src/Animated';\nimport Easing from 'react-native/Libraries/Animated/src/Easing';\nimport flattenStyle from 'react-native/Libraries/StyleSheet/flattenStyle';\nimport Platform from \"../../Utilities/Platform\";\nimport * as React from 'react';\n\nvar TouchableOpacity = function (_React$Component) {\n  _inherits(TouchableOpacity, _React$Component);\n\n  var _super = _createSuper(TouchableOpacity);\n\n  function TouchableOpacity() {\n    var _this;\n\n    _classCallCheck(this, TouchableOpacity);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      anim: new Animated.Value(_this._getChildStyleOpacityWithDefault()),\n      pressability: new Pressability(_this._createPressabilityConfig())\n    };\n    return _this;\n  }\n\n  _createClass(TouchableOpacity, [{\n    key: \"_createPressabilityConfig\",\n    value: function _createPressabilityConfig() {\n      var _this2 = this;\n\n      return {\n        cancelable: !this.props.rejectResponderTermination,\n        disabled: this.props.disabled,\n        hitSlop: this.props.hitSlop,\n        delayLongPress: this.props.delayLongPress,\n        delayPressIn: this.props.delayPressIn,\n        delayPressOut: this.props.delayPressOut,\n        minPressDuration: 0,\n        pressRectOffset: this.props.pressRetentionOffset,\n        onBlur: function onBlur(event) {\n          if (Platform.isTV) {\n            _this2._opacityInactive(250);\n          }\n\n          if (_this2.props.onBlur != null) {\n            _this2.props.onBlur(event);\n          }\n        },\n        onFocus: function onFocus(event) {\n          if (Platform.isTV) {\n            _this2._opacityActive(150);\n          }\n\n          if (_this2.props.onFocus != null) {\n            _this2.props.onFocus(event);\n          }\n        },\n        onLongPress: this.props.onLongPress,\n        onPress: this.props.onPress,\n        onPressIn: function onPressIn(event) {\n          _this2._opacityActive(event.dispatchConfig.registrationName === 'onResponderGrant' ? 0 : 150);\n\n          if (_this2.props.onPressIn != null) {\n            _this2.props.onPressIn(event);\n          }\n        },\n        onPressOut: function onPressOut(event) {\n          _this2._opacityInactive(250);\n\n          if (_this2.props.onPressOut != null) {\n            _this2.props.onPressOut(event);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"_setOpacityTo\",\n    value: function _setOpacityTo(toValue, duration) {\n      Animated.timing(this.state.anim, {\n        toValue: toValue,\n        duration: duration,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"_opacityActive\",\n    value: function _opacityActive(duration) {\n      var _this$props$activeOpa;\n\n      this._setOpacityTo((_this$props$activeOpa = this.props.activeOpacity) != null ? _this$props$activeOpa : 0.2, duration);\n    }\n  }, {\n    key: \"_opacityInactive\",\n    value: function _opacityInactive(duration) {\n      this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n    }\n  }, {\n    key: \"_getChildStyleOpacityWithDefault\",\n    value: function _getChildStyleOpacityWithDefault() {\n      var _flattenStyle;\n\n      var opacity = (_flattenStyle = flattenStyle(this.props.style)) == null ? void 0 : _flattenStyle.opacity;\n      return typeof opacity === 'number' ? opacity : 1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$pressabil = this.state.pressability.getEventHandlers(),\n          onBlur = _this$state$pressabil.onBlur,\n          onFocus = _this$state$pressabil.onFocus,\n          eventHandlersWithoutBlurAndFocus = _objectWithoutProperties(_this$state$pressabil, [\"onBlur\", \"onFocus\"]);\n\n      return React.createElement(Animated.View, _extends({\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: this.props.accessibilityState,\n        accessibilityActions: this.props.accessibilityActions,\n        onAccessibilityAction: this.props.onAccessibilityAction,\n        accessibilityValue: this.props.accessibilityValue,\n        importantForAccessibility: this.props.importantForAccessibility,\n        accessibilityLiveRegion: this.props.accessibilityLiveRegion,\n        accessibilityViewIsModal: this.props.accessibilityViewIsModal,\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        style: [this.props.style, {\n          opacity: this.state.anim\n        }],\n        nativeID: this.props.nativeID,\n        testID: this.props.testID,\n        onLayout: this.props.onLayout,\n        nextFocusDown: this.props.nextFocusDown,\n        nextFocusForward: this.props.nextFocusForward,\n        nextFocusLeft: this.props.nextFocusLeft,\n        nextFocusRight: this.props.nextFocusRight,\n        nextFocusUp: this.props.nextFocusUp,\n        hasTVPreferredFocus: this.props.hasTVPreferredFocus,\n        hitSlop: this.props.hitSlop,\n        focusable: this.props.focusable !== false && this.props.onPress !== undefined,\n        ref: this.props.hostRef\n      }, eventHandlersWithoutBlurAndFocus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }\n      }), this.props.children, __DEV__ ? React.createElement(PressabilityDebugView, {\n        color: \"cyan\",\n        hitSlop: this.props.hitSlop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }) : null);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (Platform.isTV) {\n        this._tvTouchable = new TVTouchable(this, {\n          getDisabled: function getDisabled() {\n            return _this3.props.disabled === true;\n          },\n          onBlur: function onBlur(event) {\n            if (_this3.props.onBlur != null) {\n              _this3.props.onBlur(event);\n            }\n          },\n          onFocus: function onFocus(event) {\n            if (_this3.props.onFocus != null) {\n              _this3.props.onFocus(event);\n            }\n          },\n          onPress: function onPress(event) {\n            if (_this3.props.onPress != null) {\n              _this3.props.onPress(event);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.state.pressability.configure(this._createPressabilityConfig());\n\n      if (this.props.disabled !== prevProps.disabled) {\n        this._opacityInactive(250);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.isTV) {\n        if (this._tvTouchable != null) {\n          this._tvTouchable.destroy();\n        }\n      }\n\n      this.state.pressability.reset();\n    }\n  }]);\n\n  return TouchableOpacity;\n}(React.Component);\n\nmodule.exports = React.forwardRef(function (props, hostRef) {\n  return React.createElement(TouchableOpacity, _extends({}, props, {\n    hostRef: hostRef,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 3\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js"],"names":["Pressability","PressabilityDebugView","TVTouchable","Animated","Easing","flattenStyle","Platform","React","TouchableOpacity","state","anim","Value","_getChildStyleOpacityWithDefault","pressability","_createPressabilityConfig","cancelable","props","rejectResponderTermination","disabled","hitSlop","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","onBlur","event","isTV","_opacityInactive","onFocus","_opacityActive","onLongPress","onPress","onPressIn","dispatchConfig","registrationName","onPressOut","toValue","duration","timing","easing","inOut","quad","useNativeDriver","start","_setOpacityTo","activeOpacity","opacity","style","getEventHandlers","eventHandlersWithoutBlurAndFocus","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","accessibilityValue","importantForAccessibility","accessibilityLiveRegion","accessibilityViewIsModal","accessibilityElementsHidden","nativeID","testID","onLayout","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","hasTVPreferredFocus","focusable","undefined","hostRef","children","__DEV__","_tvTouchable","getDisabled","prevProps","prevState","configure","destroy","reset","Component","module","exports","forwardRef"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport TVTouchable from './TVTouchable';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\nimport Animated from 'react-native/Libraries/Animated/src/Animated';\nimport Easing from 'react-native/Libraries/Animated/src/Easing';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport flattenStyle from 'react-native/Libraries/StyleSheet/flattenStyle';\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\n\ntype TVProps = $ReadOnly<{|\n  hasTVPreferredFocus?: ?boolean,\n  nextFocusDown?: ?number,\n  nextFocusForward?: ?number,\n  nextFocusLeft?: ?number,\n  nextFocusRight?: ?number,\n  nextFocusUp?: ?number,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n  ...TVProps,\n\n  activeOpacity?: ?number,\n  style?: ?ViewStyleProp,\n\n  hostRef: React.Ref<typeof Animated.View>,\n|}>;\n\ntype State = $ReadOnly<{|\n  anim: Animated.Value,\n  pressability: Pressability,\n|}>;\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in an Animated.View, which is\n * added to the view hierarchy.  Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableOpacity,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   state = { count: 0 }\n *\n *   onPress = () => {\n *     this.setState(state => ({\n *       count: state.count + 1\n *     }));\n *   };\n *\n *  render() {\n *    return (\n *      <View style={styles.container}>\n *        <TouchableOpacity\n *          style={styles.button}\n *          onPress={this.onPress}>\n *          <Text> Touch Here </Text>\n *        </TouchableOpacity>\n *        <View style={[styles.countContainer]}>\n *          <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nclass TouchableOpacity extends React.Component<Props, State> {\n  _tvTouchable: ?TVTouchable;\n\n  state: State = {\n    anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\n    pressability: new Pressability(this._createPressabilityConfig()),\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled: this.props.disabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      onBlur: event => {\n        if (Platform.isTV) {\n          this._opacityInactive(250);\n        }\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (Platform.isTV) {\n          this._opacityActive(150);\n        }\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: this.props.onLongPress,\n      onPress: this.props.onPress,\n      onPressIn: event => {\n        this._opacityActive(\n          event.dispatchConfig.registrationName === 'onResponderGrant'\n            ? 0\n            : 150,\n        );\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        this._opacityInactive(250);\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  _setOpacityTo(toValue: number, duration: number): void {\n    Animated.timing(this.state.anim, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  }\n\n  _opacityActive(duration: number): void {\n    this._setOpacityTo(this.props.activeOpacity ?? 0.2, duration);\n  }\n\n  _opacityInactive(duration: number): void {\n    this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  }\n\n  _getChildStyleOpacityWithDefault(): number {\n    const opacity = flattenStyle(this.props.style)?.opacity;\n    return typeof opacity === 'number' ? opacity : 1;\n  }\n\n  render(): React.Node {\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {\n      onBlur,\n      onFocus,\n      ...eventHandlersWithoutBlurAndFocus\n    } = this.state.pressability.getEventHandlers();\n\n    return (\n      <Animated.View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityState={this.props.accessibilityState}\n        accessibilityActions={this.props.accessibilityActions}\n        onAccessibilityAction={this.props.onAccessibilityAction}\n        accessibilityValue={this.props.accessibilityValue}\n        importantForAccessibility={this.props.importantForAccessibility}\n        accessibilityLiveRegion={this.props.accessibilityLiveRegion}\n        accessibilityViewIsModal={this.props.accessibilityViewIsModal}\n        accessibilityElementsHidden={this.props.accessibilityElementsHidden}\n        style={[this.props.style, {opacity: this.state.anim}]}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        onLayout={this.props.onLayout}\n        nextFocusDown={this.props.nextFocusDown}\n        nextFocusForward={this.props.nextFocusForward}\n        nextFocusLeft={this.props.nextFocusLeft}\n        nextFocusRight={this.props.nextFocusRight}\n        nextFocusUp={this.props.nextFocusUp}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        hitSlop={this.props.hitSlop}\n        focusable={\n          this.props.focusable !== false && this.props.onPress !== undefined\n        }\n        ref={this.props.hostRef}\n        {...eventHandlersWithoutBlurAndFocus}>\n        {this.props.children}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"cyan\" hitSlop={this.props.hitSlop} />\n        ) : null}\n      </Animated.View>\n    );\n  }\n\n  componentDidMount(): void {\n    if (Platform.isTV) {\n      this._tvTouchable = new TVTouchable(this, {\n        getDisabled: () => this.props.disabled === true,\n        onBlur: event => {\n          if (this.props.onBlur != null) {\n            this.props.onBlur(event);\n          }\n        },\n        onFocus: event => {\n          if (this.props.onFocus != null) {\n            this.props.onFocus(event);\n          }\n        },\n        onPress: event => {\n          if (this.props.onPress != null) {\n            this.props.onPress(event);\n          }\n        },\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n    if (this.props.disabled !== prevProps.disabled) {\n      this._opacityInactive(250);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (Platform.isTV) {\n      if (this._tvTouchable != null) {\n        this._tvTouchable.destroy();\n      }\n    }\n    this.state.pressability.reset();\n  }\n}\n\nmodule.exports = (React.forwardRef((props, hostRef) => (\n  <TouchableOpacity {...props} hostRef={hostRef} />\n)): React.ComponentType<$ReadOnly<$Diff<Props, {|hostRef: mixed|}>>>);\n"]},"metadata":{},"sourceType":"module"}