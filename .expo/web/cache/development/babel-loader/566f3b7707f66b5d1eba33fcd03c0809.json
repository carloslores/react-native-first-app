{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js\";\nimport LogBoxInspectorCodeFrame from \"./LogBoxInspectorCodeFrame\";\nimport * as React from 'react';\nimport ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport View from \"../../Components/View/View\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport Keyboard from \"../../Components/Keyboard/Keyboard\";\nimport LogBoxInspectorFooter from \"./LogBoxInspectorFooter\";\nimport LogBoxInspectorMessageHeader from \"./LogBoxInspectorMessageHeader\";\nimport LogBoxInspectorReactFrames from \"./LogBoxInspectorReactFrames\";\nimport LogBoxInspectorStackFrames from \"./LogBoxInspectorStackFrames\";\nimport LogBoxInspectorHeader from \"./LogBoxInspectorHeader\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport LogBoxLog from \"../Data/LogBoxLog\";\n\nfunction LogBoxInspector(props) {\n  var logs = props.logs,\n      selectedIndex = props.selectedIndex;\n  var log = logs[selectedIndex];\n  React.useEffect(function () {\n    if (log) {\n      LogBoxData.symbolicateLogNow(log);\n    }\n  }, [log]);\n  React.useEffect(function () {\n    if (logs.length > 1) {\n      var selected = selectedIndex;\n      var lastIndex = logs.length - 1;\n      var prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      var nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      LogBoxData.symbolicateLogLazy(logs[prevIndex]);\n      LogBoxData.symbolicateLogLazy(logs[nextIndex]);\n    }\n  }, [logs, selectedIndex]);\n  React.useEffect(function () {\n    Keyboard.dismiss();\n  }, []);\n\n  function _handleRetry() {\n    LogBoxData.retrySymbolicateLogNow(log);\n  }\n\n  if (log == null) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(LogBoxInspectorHeader, {\n    onSelectIndex: props.onChangeSelectedIndex,\n    selectedIndex: selectedIndex,\n    total: logs.length,\n    level: log.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(LogBoxInspectorBody, {\n    log: log,\n    onRetry: _handleRetry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(LogBoxInspectorFooter, {\n    onDismiss: props.onDismiss,\n    onMinimize: props.onMinimize,\n    level: log.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar headerTitleMap = {\n  warn: 'Warning',\n  error: 'Error',\n  fatal: 'Exception',\n  syntax: 'Syntax Error',\n  component: 'Component Exception'\n};\n\nfunction LogBoxInspectorBody(props) {\n  var _props$log$type;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      collapsed = _React$useState2[0],\n      setCollapsed = _React$useState2[1];\n\n  React.useEffect(function () {\n    setCollapsed(true);\n  }, [props.log]);\n  var headerTitle = (_props$log$type = props.log.type) != null ? _props$log$type : headerTitleMap[props.log.isComponentError ? 'component' : props.log.level];\n\n  if (collapsed) {\n    return React.createElement(React.Fragment, null, React.createElement(LogBoxInspectorMessageHeader, {\n      collapsed: collapsed,\n      onPress: function onPress() {\n        return setCollapsed(!collapsed);\n      },\n      message: props.log.message,\n      level: props.log.level,\n      title: headerTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), React.createElement(ScrollView, {\n      style: styles.scrollBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, React.createElement(LogBoxInspectorCodeFrame, {\n      codeFrame: props.log.codeFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), React.createElement(LogBoxInspectorReactFrames, {\n      log: props.log,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), React.createElement(LogBoxInspectorStackFrames, {\n      log: props.log,\n      onRetry: props.onRetry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.scrollBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(LogBoxInspectorMessageHeader, {\n    collapsed: collapsed,\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    message: props.log.message,\n    level: props.log.level,\n    title: headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), React.createElement(LogBoxInspectorCodeFrame, {\n    codeFrame: props.log.codeFrame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), React.createElement(LogBoxInspectorReactFrames, {\n    log: props.log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), React.createElement(LogBoxInspectorStackFrames, {\n    log: props.log,\n    onRetry: props.onRetry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: LogBoxStyle.getTextColor()\n  },\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(0.9),\n    flex: 1\n  }\n});\nexport default LogBoxInspector;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js"],"names":["LogBoxInspectorCodeFrame","React","ScrollView","StyleSheet","View","LogBoxData","Keyboard","LogBoxInspectorFooter","LogBoxInspectorMessageHeader","LogBoxInspectorReactFrames","LogBoxInspectorStackFrames","LogBoxInspectorHeader","LogBoxStyle","LogBoxLog","LogBoxInspector","props","logs","selectedIndex","log","useEffect","symbolicateLogNow","length","selected","lastIndex","prevIndex","nextIndex","symbolicateLogLazy","dismiss","_handleRetry","retrySymbolicateLogNow","styles","root","onChangeSelectedIndex","level","onDismiss","onMinimize","headerTitleMap","warn","error","fatal","syntax","component","LogBoxInspectorBody","useState","collapsed","setCollapsed","headerTitle","type","isComponentError","message","scrollBody","codeFrame","onRetry","create","flex","backgroundColor","getTextColor","getBackgroundColor"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport LogBoxInspectorCodeFrame from './LogBoxInspectorCodeFrame';\nimport * as React from 'react';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport View from '../../Components/View/View';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport Keyboard from '../../Components/Keyboard/Keyboard';\nimport LogBoxInspectorFooter from './LogBoxInspectorFooter';\nimport LogBoxInspectorMessageHeader from './LogBoxInspectorMessageHeader';\nimport LogBoxInspectorReactFrames from './LogBoxInspectorReactFrames';\nimport LogBoxInspectorStackFrames from './LogBoxInspectorStackFrames';\nimport LogBoxInspectorHeader from './LogBoxInspectorHeader';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport LogBoxLog, {type LogLevel} from '../Data/LogBoxLog';\n\ntype Props = $ReadOnly<{|\n  onDismiss: () => void,\n  onChangeSelectedIndex: (index: number) => void,\n  onMinimize: () => void,\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedIndex: number,\n  fatalType?: ?LogLevel,\n|}>;\n\nfunction LogBoxInspector(props: Props): React.Node {\n  const {logs, selectedIndex} = props;\n  let log = logs[selectedIndex];\n\n  React.useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow(log);\n    }\n  }, [log]);\n\n  React.useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      LogBoxData.symbolicateLogLazy(logs[prevIndex]);\n      LogBoxData.symbolicateLogLazy(logs[nextIndex]);\n    }\n  }, [logs, selectedIndex]);\n\n  React.useEffect(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  function _handleRetry() {\n    LogBoxData.retrySymbolicateLogNow(log);\n  }\n\n  if (log == null) {\n    return null;\n  }\n\n  return (\n    <View style={styles.root}>\n      <LogBoxInspectorHeader\n        onSelectIndex={props.onChangeSelectedIndex}\n        selectedIndex={selectedIndex}\n        total={logs.length}\n        level={log.level}\n      />\n      <LogBoxInspectorBody log={log} onRetry={_handleRetry} />\n      <LogBoxInspectorFooter\n        onDismiss={props.onDismiss}\n        onMinimize={props.onMinimize}\n        level={log.level}\n      />\n    </View>\n  );\n}\n\nconst headerTitleMap = {\n  warn: 'Warning',\n  error: 'Error',\n  fatal: 'Exception',\n  syntax: 'Syntax Error',\n  component: 'Component Exception',\n};\n\nfunction LogBoxInspectorBody(props) {\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  React.useEffect(() => {\n    setCollapsed(true);\n  }, [props.log]);\n\n  const headerTitle =\n    props.log.type ??\n    headerTitleMap[props.log.isComponentError ? 'component' : props.log.level];\n\n  if (collapsed) {\n    return (\n      <>\n        <LogBoxInspectorMessageHeader\n          collapsed={collapsed}\n          onPress={() => setCollapsed(!collapsed)}\n          message={props.log.message}\n          level={props.log.level}\n          title={headerTitle}\n        />\n        <ScrollView style={styles.scrollBody}>\n          <LogBoxInspectorCodeFrame codeFrame={props.log.codeFrame} />\n          <LogBoxInspectorReactFrames log={props.log} />\n          <LogBoxInspectorStackFrames log={props.log} onRetry={props.onRetry} />\n        </ScrollView>\n      </>\n    );\n  }\n  return (\n    <ScrollView style={styles.scrollBody}>\n      <LogBoxInspectorMessageHeader\n        collapsed={collapsed}\n        onPress={() => setCollapsed(!collapsed)}\n        message={props.log.message}\n        level={props.log.level}\n        title={headerTitle}\n      />\n      <LogBoxInspectorCodeFrame codeFrame={props.log.codeFrame} />\n      <LogBoxInspectorReactFrames log={props.log} />\n      <LogBoxInspectorStackFrames log={props.log} onRetry={props.onRetry} />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: LogBoxStyle.getTextColor(),\n  },\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(0.9),\n    flex: 1,\n  },\n});\n\nexport default LogBoxInspector;\n"]},"metadata":{},"sourceType":"module"}