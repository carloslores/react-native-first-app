{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/navigation/tabs.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createBottomTabNavigator, BottomTabBar } from '@react-navigation/bottom-tabs';\nimport Svg, { Path } from 'react-native-svg';\nimport { Home } from \"../screens\";\nimport { COLORS, icons } from \"../constants\";\nvar Tab = createBottomTabNavigator();\n\nvar TabBarCustomButton = function TabBarCustomButton(_ref) {\n  var accesibilityState = _ref.accesibilityState,\n      children = _ref.children,\n      onPress = _ref.onPress;\n  var isSelected = accesibilityState.isSelected;\n\n  if (isSelected) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        position: 'absolute',\n        top: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), React.createElement(Svg, {\n      width: 75,\n      height: 61,\n      viewBox: \"0 0 75 61\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, React.createElement(Path, {\n      d: \"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\",\n      fill: COLORS.white,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        top: -22.5,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: COLORS.white\n      },\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, children));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        flex: 1,\n        height: 60,\n        backgroundColor: COLORS.white\n      },\n      activeOpacity: 1,\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, children);\n  }\n};\n\nvar Tabs = function Tabs() {\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: 'transparent',\n        borderTopWidth: '0',\n        elevation: '0'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        var image = focused ? icons.cutlery : icons.cutleryDisable;\n        return React.createElement(Image, {\n          source: image,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tinColor: focused ? COLORS.primary : COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 24\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 24\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        var image = focused ? icons.search : icons.searchDisable;\n        return React.createElement(Image, {\n          source: image,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 24\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Like\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        var image = focused ? icons.like : icons.likeDisable;\n        return React.createElement(Image, {\n          source: image,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tinColor: focused ? COLORS.primary : COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 24\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 24\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"User\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        var image = focused ? icons.user : icons.userDisable;\n        return React.createElement(Image, {\n          source: image,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 28\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 24\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default Tabs;","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/Personal/react-native/react-native-first-app/navigation/tabs.js"],"names":["React","createBottomTabNavigator","BottomTabBar","Svg","Path","Home","COLORS","icons","Tab","TabBarCustomButton","accesibilityState","children","onPress","isSelected","flex","alignItems","flexDirection","position","top","backgroundColor","white","justifyContent","width","height","borderRadius","Tabs","showLabel","style","borderTopWidth","elevation","tabBarIcon","focused","image","cutlery","cutleryDisable","tinColor","primary","secondary","tabBarButton","props","search","searchDisable","like","likeDisable","user","userDisable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View, \n    Image, TouchableOpacity\n} from 'react-native';\nimport { createBottomTabNavigator, BottomTabBar } from '@react-navigation/bottom-tabs';\n\nimport Svg, {Path} from 'react-native-svg';\n\nimport { Home } from '../screens';\n\nimport { COLORS, icons } from '../constants';\n\nconst Tab = createBottomTabNavigator();\n\nconst TabBarCustomButton = ({ accesibilityState, children, onPress }) => {\n    let isSelected = accesibilityState.isSelected;\n\n    if(isSelected) {\n        return (\n            <View style={{ flex: 1, alignItems: \"center\" }}>\n            <View style={{ flexDirection: 'row', position: 'absolute', top: 0 }}>\n                <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n                <Svg\n                    width={75}\n                    height={61}\n                    viewBox=\"0 0 75 61\"\n                >\n                    <Path\n                        d=\"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\"\n                        fill={COLORS.white}\n                    />\n                </Svg>\n                <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n            </View>\n\n            <TouchableOpacity\n                style={{\n                    top: -22.5,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    width: 50,\n                    height: 50,\n                    borderRadius: 25,\n                    backgroundColor: COLORS.white\n                }}\n                onPress={onPress}\n            >\n                {children}\n            </TouchableOpacity>\n        </View>\n        )\n\n    } else {\n        return (\n            <TouchableOpacity\n            style={{\n                flex: 1,\n                height: 60,\n                backgroundColor: COLORS.white\n            }}\n            activeOpacity={1}\n            onPress={onPress}\n        >\n            {children}\n        </TouchableOpacity>\n        )\n    }\n}\n\nconst Tabs = () => {\n    return (\n        <Tab.Navigator\n           tabBarOptions={{\n               showLabel: false, \n               style: {\n                   backgroundColor: 'transparent',\n                   borderTopWidth: '0', \n                   elevation: '0'\n               }\n           }}         \n        >\n            <Tab.Screen\n               name='Home'\n               component={Home}\n               options={{\n                   tabBarIcon: ({focused}) => {\n                       const image = focused ? icons.cutlery : icons.cutleryDisable;  \n                       return (\n                       <Image\n                           source={image}\n                           resizeMode='contain'\n                           style={{\n                               width: 25,\n                               height: 25,\n                               tinColor: focused ? COLORS.primary : COLORS.secondary\n                           }}\n                       />\n                       )\n                   },\n                   tabBarButton: (props) => (\n                       <TabBarCustomButton\n                           {...props}\n                       />                 \n                       )\n               }}\n            />\n            <Tab.Screen\n               name='Search'\n               component={Home}\n               options={{\n                   tabBarIcon: ({focused}) => {\n                       const image = focused ? icons.search : icons.searchDisable;  \n                       return (\n                       <Image\n                           source={image}\n                           resizeMode='contain'\n                           style={{\n                               width: 25,\n                               height: 25,\n                           }}\n                       />\n                       )\n                   },\n                   tabBarButton: (props) => (\n                       <TabBarCustomButton\n                           {...props}\n                       />                 \n                       )\n               }}\n            />\n            <Tab.Screen\n               name='Like'\n               component={Home}\n               options={{\n                   tabBarIcon: ({focused}) => {\n                       const image = focused ? icons.like : icons.likeDisable;  \n                       return (\n                       <Image\n                           source={image}\n                           resizeMode='contain'\n                           style={{\n                               width: 25,\n                               height: 25,\n                               tinColor: focused ? COLORS.primary : COLORS.secondary\n                           }}\n                       />\n                       )\n                   },\n                   tabBarButton: (props) => (\n                       <TabBarCustomButton\n                           {...props}\n                       />                 \n                       )\n                      \n               }}\n            />\n             <Tab.Screen\n               name='User'\n               component={Home}\n               options={{\n                   tabBarIcon: ({focused}) => {\n                       const image = focused ? icons.user : icons.userDisable;\n                       return (\n                           <Image\n                               source={image}\n                               resizeMode='contain'\n                               style={{\n                                   width: 25,\n                                   height: 25,\n                               }}\n                           />\n                       )\n                   },\n                   tabBarButton: (props) => (\n                       <TabBarCustomButton\n                           {...props}\n                       />                 \n                       )\n               }}\n            />\n        </Tab.Navigator>\n    )\n}\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}